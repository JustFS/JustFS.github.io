{"version":3,"sources":["utils/firebaseConfig.js","components/UidContext.js","components/Create.js","components/UpdateDelete.js","components/Read.js","components/Main.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","UidContext","createContext","Create","useState","author","setAuthor","text","setText","uid","useContext","className","type","placeholder","value","onChange","e","target","onClick","quotesDB","database","ref","quote","push","UpdateDelete","item","update","setUpdate","authorUpdate","setAuthorUpdate","textUpdate","setTextUpdate","authorCheck","child","id","remove","defaultValue","Read","quoteList","setQuoteList","useEffect","on","snapshot","console","log","val","previousList","list","map","index","key","Main","auth","currentUser","displayName","signOut","App","isSignedIn","setIsSignedIn","setUid","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","TwitterAuthProvider","EmailAuthProvider","callbacks","signInSuccess","onAuthStateChanged","user","Provider","firebaseAuth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.447c799a.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCVPb5Wkan3Ma6shPRxV89ilDB7wrlN0yE\",\r\n  // auth\r\n  authDomain: \"react-auth-4f668.firebaseapp.com\",\r\n  databaseURL: \"https://react-auth-4f668.firebaseio.com\",\r\n  projectId: \"react-auth-4f668\",\r\n  storageBucket: \"react-auth-4f668.appspot.com\",\r\n  messagingSenderId: \"133314651046\",\r\n  appId: \"1:133314651046:web:353807c7bd784eb7346567\",\r\n  measurementId: \"G-EHS1EER2GK\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import { createContext } from 'react';\r\n\r\nexport const UidContext = createContext(null);","import React, { useState, useContext } from \"react\";\r\nimport firebase from \"../utils/firebaseConfig\";\r\nimport { UidContext } from \"./UidContext\";\r\n\r\nconst Create = () => {\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const uid = useContext(UidContext);\r\n\r\n  const createQuote = () => {\r\n    const quotesDB = firebase.database().ref(\"quotesDB\");\r\n    const quote = {\r\n      uid,\r\n      author,\r\n      text,\r\n    };\r\n\r\n    quotesDB.push(quote);\r\n\r\n    setAuthor(\"\");\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      <h4>Déposer une citation</h4>\r\n      <div className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Auteur\"\r\n          value={author}\r\n          onChange={(e) => setAuthor(e.target.value)}\r\n        />\r\n        <textarea\r\n          type=\"text\"\r\n          placeholder=\"Citation\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n        <button onClick={createQuote}>Create</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import React, { useState, useContext } from \"react\";\r\nimport firebase from \"../utils/firebaseConfig\";\r\nimport { UidContext } from \"./UidContext\";\r\n\r\nconst UpdateDelete = ({ item }) => {\r\n  const [update, setUpdate] = useState(false);\r\n  const [authorUpdate, setAuthorUpdate] = useState(null);\r\n  const [textUpdate, setTextUpdate] = useState(null);\r\n\r\n  const uid = useContext(UidContext);\r\n\r\n  const authorCheck = () => {\r\n    if (item.uid === uid) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  authorCheck();\r\n\r\n  const updateItem = () => {\r\n    // pointer id de l'élement à update\r\n    let quote = firebase.database().ref(\"quotesDB\").child(item.id);\r\n\r\n    // make sure there's no undifined\r\n    if (authorUpdate !== null) {\r\n      quote.update({\r\n        author: authorUpdate,\r\n      });\r\n    }\r\n    if (textUpdate !== null) {\r\n      quote.update({\r\n        text: textUpdate,\r\n      });\r\n    }\r\n    // repasse update sur false\r\n    setUpdate(false);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    // pointer id de l'élement à delete\r\n    let quote = firebase.database().ref(\"quotesDB\").child(item.id);\r\n\r\n    quote.remove();\r\n    authorCheck();\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      {update === false && (\r\n        <div className=\"item-container\">\r\n          <p>\"{item.text}\"</p>\r\n          <h6>{item.author}</h6>\r\n\r\n          {authorCheck() && (\r\n            <div className=\"buttons-container\">\r\n              <button onClick={() => setUpdate(!update)}>Update</button>\r\n              <button onClick={deleteItem}>Delete</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {update && (\r\n        <div className=\"item-container-update\">\r\n          <textarea\r\n            defaultValue={item.text}\r\n            onChange={(e) => setTextUpdate(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            defaultValue={item.author}\r\n            onChange={(e) => setAuthorUpdate(e.target.value)}\r\n          />\r\n          <button onClick={updateItem}>Validate update</button>\r\n        </div>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UpdateDelete;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"../utils/firebaseConfig\";\r\nimport UpdateDelete from \"./UpdateDelete\";\r\n\r\nconst Read = () => {\r\n  const [quoteList, setQuoteList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const quotesDB = firebase.database().ref(\"quotesDB\");\r\n\r\n    quotesDB.on(\"value\", (snapshot) => {\r\n      console.log(snapshot.val());\r\n      let previousList = snapshot.val();\r\n      let list = [];\r\n      for (let id in previousList) {\r\n        list.push({ id, ...previousList[id] });\r\n      }\r\n      setQuoteList(list);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"read\">\r\n      <ul>\r\n        {quoteList &&\r\n          quoteList.map((item, index) => (\r\n            <UpdateDelete item={item} key={index} />\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Read;\r\n","import React from \"react\";\r\nimport firebase from \"../utils/firebaseConfig\";\r\nimport Create from \"./Create\";\r\nimport Read from \"./Read\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <main>\r\n      <nav>\r\n        <h1>React Crud</h1>\r\n        <h4>Bonjour {firebase.auth().currentUser.displayName}</h4>\r\n        <div onClick={() => firebase.auth().signOut()}>Se déconnecter</div>\r\n      </nav>\r\n\r\n      <Create />\r\n      <Read />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState, useEffect } from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"./utils/firebaseConfig\";\nimport Main from \"./components/Main\";\nimport { UidContext } from \"./components/UidContext\";\n\nconst App = () => {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [uid, setUid] = useState(null);\n\n  const uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccess: () => false,\n    },\n  };\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      setIsSignedIn(!!user);\n      console.log(user);\n      setUid(user.uid);\n    });\n  }, []);\n\n  return (\n    <UidContext.Provider value={uid}>\n      <div className=\"App\">\n        {isSignedIn ? (\n          <Main />\n        ) : (\n          <div className=\"login-page\">\n            <h1>React Crud</h1>\n            <StyledFirebaseAuth\n              uiConfig={uiConfig}\n              firebaseAuth={firebase.auth()}\n            />\n          </div>\n        )}\n      </div>\n    </UidContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}